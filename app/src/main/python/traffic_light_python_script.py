# -*- coding: utf-8 -*-
"""TrafficLightDecisionTree1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ch5YIVQs2Yp5qq7CQDGKYK1em30Oyqua
"""

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics


# df = pd.read_csv("")
# df.head()

# uploaded = files.upload()
def main():
    roundabout_training_data = pd.read_csv(
         'https://github.com/Brokoth/TrafficAppData/blob/main/TrainingDataset%20-%20RoundaboutDatasetThreeRandMultipleGreens.csv?raw=true')
    roundabout_independent_variables = roundabout_training_data.drop(
        ['LightOneColour', 'LightTwoColour', 'LightThreeColour', 'LightFourColour'],
        axis='columns')
    roundabout_target = roundabout_training_data[
        ['LightOneColour', 'LightTwoColour', 'LightThreeColour', 'LightFourColour']].copy()
    roundabout_independent_variables_train, roundabout_independent_variables_test, roundabout_target_train, roundabout_target_test = train_test_split(
        roundabout_independent_variables,
        roundabout_target, test_size=0.3,
        random_state=1)

    t_junction_training_data = pd.read_csv(
        'https://github.com/Brokoth/TrafficAppData/blob/main/TrainingDataset%20-%20TjunctionDatasetThreeRandMultipleGreens.csv?raw=true')
    t_junction_independent_variables = t_junction_training_data.drop(
        ['LightOneColour', 'LightTwoColour', 'LightThreeColour'],
        axis='columns')
    t_junction_target = t_junction_training_data[
        ['LightOneColour', 'LightTwoColour', 'LightThreeColour']].copy()
    t_junction_independent_variables_train, t_junction_independent_variables_test, t_junction_target_train, t_junction_target_test = train_test_split(
        t_junction_independent_variables,
        t_junction_target, test_size=0.3,
        random_state=1)

    global rounda_model
    rounda_model = RandomForestClassifier(n_estimators=100)
    rounda_model.fit(roundabout_independent_variables_train, roundabout_target_train)
    target_prediction = rounda_model.predict(roundabout_independent_variables_test)
    print("Roundabout Random Forest Accuracy:", metrics.accuracy_score(roundabout_target_test, target_prediction))

    global tjun_model
    tjun_model = RandomForestClassifier(n_estimators=100)
    tjun_model.fit(t_junction_independent_variables_train, t_junction_target_train)
    t_junction_target_prediction = tjun_model.predict(t_junction_independent_variables_test)
    print("T-junction Random Forest Accuracy:", metrics.accuracy_score(t_junction_target_test, t_junction_target_prediction))


def roundabout(lane_1_density, lane_2_density, lane_3_density, lane_4_density):
    roundabout_target_prediction = rounda_model.predict(
        [[lane_1_density, lane_2_density, lane_3_density, lane_4_density]])
    print(roundabout_target_prediction)
    return roundabout_target_prediction


def t_junction(lane_1_density, lane_2_density, lane_3_density):
    tjun_target_prediction = tjun_model.predict([[lane_1_density, lane_2_density, lane_3_density]])
    print(tjun_target_prediction)
    return tjun_target_prediction
